<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.2.5</version> <!-- Keep consistent with spring-boot.version property -->
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <groupId>com.ppi.utility</groupId>
    <artifactId>importer</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>ppi-utility-importer</name>
    <description>PPI Utility for Excel Data Import</description>

    <properties>
        <java.version>21</java.version>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <!-- Spring Boot Version -->
        <spring-boot.version>3.2.5</spring-boot.version>
        <!-- JavaFX Version -->
        <javafx.version>22</javafx.version>
        <!-- Apache POI for Excel -->
        <poi.version>5.2.5</poi.version>

        <!-- Oracle JDBC Driver -->
        <oracle.jdbc.version>23.4.0.24.05</oracle.jdbc.version> <!-- Use a recent version -->
    </properties>

    <dependencies>
        <!-- Spring Boot Starters -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId> <!-- For validation if needed -->
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- Oracle JDBC Driver -->
        <!-- Note: For production, you might need to manually add the ojdbc8.jar to your local Maven repository
             if it's not available in public repositories.
             Example command: mvn install:install-file -Dfile=/path/to/ojdbc8.jar -DgroupId=com.oracle.database.jdbc -DartifactId=ojdbc8 -Dversion=19.8.0.0 -Dpackaging=jar
        -->
        <dependency>
            <groupId>com.oracle.database.jdbc</groupId>
            <artifactId>ojdbc8</artifactId>
            <version>${oracle.jdbc.version}</version> <!-- Use the version defined in properties -->
        </dependency>

        <!-- JavaFX Dependencies -->
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-controls</artifactId>
            <version>${javafx.version}</version>
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-fxml</artifactId>
            <version>${javafx.version}</version>
        </dependency>

        <!-- Apache POI for Excel File Reading -->
        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi</artifactId>
            <version>${poi.version}</version> <!-- Use the version defined in properties -->
        </dependency>
        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi-ooxml</artifactId>
            <version>${poi.version}</version> <!-- Use the version defined in properties -->
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <!-- Spring Boot Maven Plugin for packaging -->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <mainClass>com.ppi.utility.importer.MainApplication</mainClass>
                    <!-- Exclude JavaFX modules from the fat JAR if using jlink for distribution -->
                    <!-- <excludes>
                        <exclude>
                            <groupId>org.openjfx</groupId>
                            <artifactId>*</artifactId>
                        </exclude>
                    </excludes> -->
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- JavaFX Maven Plugin for running and packaging JavaFX applications -->
            <plugin>
                <groupId>org.openjfx</groupId>
                <artifactId>javafx-maven-plugin</artifactId>
                <version>0.0.8</version> <!-- Compatible version for JavaFX 22 -->
                <configuration>
                    <mainClass>com.ppi.utility.importer.MainApplication</mainClass>
                </configuration>
            </plugin>

            <!-- Maven Compiler Plugin to ensure correct Java version -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.11.0</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
